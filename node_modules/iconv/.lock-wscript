argv = ['/usr/local/bin/node-waf', 'configure']
blddir = '/Users/shilpe/rinker_worspace/scraper/node_modules/iconv/build'
commands = {'dist': 0, 'configure': True, 'distcheck': 0, 'install': 0, 'build': 0, 'clean': 0, 'distclean': 0, 'check': 0, 'uninstall': 0}
cwd = '/Users/shilpe/rinker_worspace/scraper/node_modules/iconv'
environ = {'npm_config_git': 'git', 'npm_package_author_url': 'http://bnoordhuis.nl/', 'npm_config_engine_strict': '', 'npm_config_searchopts': '', 'npm_config_fetch_retry_factor': '10', 'TERM_PROGRAM_VERSION': '309', 'npm_package_dist_shasum': '85c26af4812ff53d3fd81e395a6e34dd89a6e074', 'npm_config_group': '20', 'npm_package_homepage': 'https://github.com/bnoordhuis/node-iconv', 'npm_config_browser': 'open', 'npm_package_repository_url': 'https://github.com/bnoordhuis/node-iconv.git', 'npm_config_global': '', 'npm_config_color': 'true', 'TERM_PROGRAM': 'Apple_Terminal', 'LANG': 'ko_KR.UTF-8', 'SHELL': '/bin/bash', 'npm_config_save': '', 'npm_config_registry': 'https://registry.npmjs.org/', 'npm_config_unicode': 'true', 'npm_config_production': '', 'npm_config_pre': '', 'npm_config_message': '%s', 'npm_config_always_auth': '', '_': '/usr/local/bin/node-waf', 'npm_config_searchexclude': '', 'npm_config_loglevel': 'http', 'npm_config_tmp': '/var/folders/r8/dfw3s7px68q1xm2429whqnyh0000gn/T/', 'npm_package_engines_node': '>=0.3.0', 'npm_config_argv': '{"remain":[],"cooked":["install"],"original":["install"]}', 'npm_config_cache_lock_wait': '10000', 'npm_config_cache_lock_retries': '10', 'npm_package_scripts_preinstall': 'node-waf configure', 'npm_config_strict_ssl': 'true', 'npm_config_save_bundle': '', 'npm_config_save_dev': '', 'npm_config_optional': 'true', 'npm_package_main': 'iconv', 'npm_config_init_version': '0.0.0', 'npm_config_user_agent': 'node/v0.8.8', 'npm_lifecycle_event': 'preinstall', 'npm_config_rollback': 'true', 'npm_config_init_author_name': '', 'npm_config_globalignorefile': '/usr/etc/npmignore', '__CF_USER_TEXT_ENCODING': '0x1F5:3:51', 'npm_config_yes': '', 'npm_config_npaturl': 'http://npat.npmjs.org/', 'npm_config_usage': '', 'npm_package_description': 'Text recoding in JavaScript for fun and profit!', 'npm_config_shell': '/bin/bash', 'npm_config_force': '', 'LOGNAME': 'shilpe', 'npm_config_ignore': '', 'npm_config_user': '', 'npm_config_link': '', 'npm_config_ca': '"-----BEGIN CERTIFICATE-----\\nMIIChzCCAfACCQDauvz/KHp8ejANBgkqhkiG9w0BAQUFADCBhzELMAkGA1UEBhMC\\nVVMxCzAJBgNVBAgTAkNBMRAwDgYDVQQHEwdPYWtsYW5kMQwwCgYDVQQKEwNucG0x\\nIjAgBgNVBAsTGW5wbSBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxDjAMBgNVBAMTBW5w\\nbUNBMRcwFQYJKoZIhvcNAQkBFghpQGl6cy5tZTAeFw0xMTA5MDUwMTQ3MTdaFw0y\\nMTA5MDIwMTQ3MTdaMIGHMQswCQYDVQQGEwJVUzELMAkGA1UECBMCQ0ExEDAOBgNV\\nBAcTB09ha2xhbmQxDDAKBgNVBAoTA25wbTEiMCAGA1UECxMZbnBtIENlcnRpZmlj\\nYXRlIEF1dGhvcml0eTEOMAwGA1UEAxMFbnBtQ0ExFzAVBgkqhkiG9w0BCQEWCGlA\\naXpzLm1lMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDLI4tIqPpRW+ACw9GE\\nOgBlJZwK5f8nnKCLK629Pv5yJpQKs3DENExAyOgDcyaF0HD0zk8zTp+ZsLaNdKOz\\nGn2U181KGprGKAXP6DU6ByOJDWmTlY6+Ad1laYT0m64fERSpHw/hjD3D+iX4aMOl\\ny0HdbT5m1ZGh6SJz3ZqxavhHLQIDAQABMA0GCSqGSIb3DQEBBQUAA4GBAC4ySDbC\\nl7W1WpLmtLGEQ/yuMLUf6Jy/vr+CRp4h+UzL+IQpCv8FfxsYE7dhf/bmWTEupBkv\\nyNL18lipt2jSvR3v6oAHAReotvdjqhxddpe5Holns6EQd1/xEZ7sB1YhQKJtvUrl\\nZNufy1Jf1r0ldEGeA+0ISck7s+xSh9rQD2Op\\n-----END CERTIFICATE-----\\n"', 'npm_config_globalconfig': '/usr/etc/npmrc', 'npm_package_name': 'iconv', 'npm_config_userconfig': '/Users/shilpe/.npmrc', 'npm_package_scripts_install': 'node-waf build install', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'npm_config_parseable': '', 'npm_config_dev': '', 'npm_config_rebuild_bundle': 'true', 'npm_config_userignorefile': '/Users/shilpe/.npmignore', 'npm_config_username': '', 'USER': 'shilpe', 'HOME': '/Users/shilpe', 'PATH': '/usr/bin:/usr/local/lib/node_modules/npm/bin/node-gyp-bin:/Users/shilpe/rinker_worspace/scraper/node_modules/iconv/node_modules/.bin:/Users/shilpe/rinker_worspace/scraper/node_modules/.bin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/git/bin', 'npm_package_author_name': 'Ben Noordhuis', 'npm_config_coverage': '', 'TERM': 'xterm-256color', 'npm_config_versions': '', 'npm_config_node_version': 'v0.8.8', 'npm_config_onload_script': '', 'VERSIONER_PYTHON_VERSION': '2.7', 'SHLVL': '2', 'npm_config_description': 'true', 'npm_config_cache_lock_stale': '60000', 'npm_config_sign_git_tag': '', 'npm_config_init_author_url': '', 'npm_config_fetch_retry_maxtimeout': '60000', 'npm_config_prefix': '/usr', 'npm_config_unsafe_perm': 'true', 'npm_config_cache': '/Users/shilpe/.npm', 'npm_config_save_optional': '', 'npm_config_fetch_retry_mintimeout': '10000', 'npm_config_viewer': 'man', 'TERM_SESSION_ID': 'A1D9B77F-6410-410D-9D90-AC8F78826A8A', 'npm_config_proxy': '', 'npm_config_fetch_retries': '2', 'npm_config_cache_max': 'null', 'npm_config_depth': 'null', 'SSH_AUTH_SOCK': '/tmp/launch-h8RtXf/Listeners', 'npm_config_umask': '18', 'npm_config_proprietary_attribs': 'true', 'npm_config_long': '', 'Apple_PubSub_Socket_Render': '/tmp/launch-Y7EGhc/Render', 'npm_config_editor': 'vi', 'npm_package_version': '1.1.3', 'npm_config_https_proxy': '', 'TMPDIR': '/var/folders/r8/dfw3s7px68q1xm2429whqnyh0000gn/T/', 'npm_package_repository_type': 'git', 'npm_config_init_author_email': '', 'npm_config_npat': '', 'npm_package_readme': '"# node-iconv\\n\\nText recoding in JavaScript for fun and profit!\\n\\n## Installing with [npm](http://npmjs.org/)\\n\\n\\tnpm install iconv\\n\\nNote that the npm-ified version of node-iconv only\\nworks with node.js >= v0.3.0.\\n\\n## Cloning the repository\\n\\nIf you are developing against node.js v0.3.0 or later:\\n\\n\\tgit clone git://github.com/bnoordhuis/node-iconv.git\\n\\nIf you are developing against node.js v0.2.x:\\n\\n\\tgit clone -b v0.2.x git://github.com/bnoordhuis/node-iconv.git\\n\\nv0.2.x support is slowly being phased out but it will receive bug fixes\\nfor the foreseeable future.\\n\\n## Compiling\\n\\nTo compile and install the module, type:\\n\\n\\tmake install NODE_PATH=/path/to/nodejs\\n\\nNODE_PATH will default to `/usr/local` if omitted.\\n\\nNote that you do not need to have a copy of libiconv installed to use this module.\\n\\n## Usage\\n\\nEncode from one character encoding to another:\\n\\n\\t// convert from UTF-8 to ISO-8859-1\\n\\tvar Buffer = require(\'buffer\').Buffer;\\n\\tvar Iconv  = require(\'iconv\').Iconv;\\n\\tvar assert = require(\'assert\');\\n\\t\\n\\tvar iconv = new Iconv(\'UTF-8\', \'ISO-8859-1\');\\n\\tvar buffer = iconv.convert(\'Hello, world!\');\\n\\tvar buffer2 = iconv.convert(new Buffer(\'Hello, world!\'));\\n\\tassert.equals(buffer.inspect(), buffer2.inspect());\\n\\t// do something useful with the buffers\\n\\nLook at test.js for more examples and node-iconv\'s behaviour under error conditions.\\n\\n## Notes\\n\\nThings to keep in mind when you work with node-iconv.\\n\\n### Chunked data\\n\\nSay you are reading data in chunks from a HTTP stream. The logical input is a single document (the full POST request data) but the physical input will be spread over several buffers (the request chunks).\\n\\nYou must accumulate the small buffers into a single large buffer before performing the conversion. If you don\'t, you will get unexpected results with multi-byte and stateful character sets like UTF-8 and ISO-2022-JP.\\n\\n[node-buffertools](http://github.com/bnoordhuis/node-buffertools) lets you concatenate buffers painlessly. See the description of `buffertools.concat()` for details.\\n\\n### Dealing with untranslatable characters\\n\\nCharacters are not always translatable to another encoding. The UTF-8 string\\n\\"\xc3\xa7a va \xe3\x81\x8c\\", for example, cannot be represented in plain 7-bits ASCII without\\nsome loss of fidelity.\\n\\nBy default, node-iconv throws EILSEQ when untranslatabe characters are encountered\\nbut this can be customized. Quoting the `iconv_open(3)` man page:\\n\\n\\t//TRANSLIT\\n\\t\\tWhen  the  string  \\"//TRANSLIT\\"  is appended to tocode, transliteration is activated.\\n\\t\\tThis means that when a character cannot be represented in the target character set,\\n\\t\\tit can be approximated through one or several similarly looking characters.\\n\\n\\t//IGNORE\\n\\t\\tWhen the string \\"//IGNORE\\" is appended to tocode, characters that cannot be represented\\n\\t\\tin the target character set will be silently discarded.\\n\\nExample usage:\\n\\n\\tvar iconv = new Iconv(\'UTF-8\', \'ASCII\');\\n\\ticonv.convert(\'\xc3\xa7a va\'); // throws EILSEQ\\n\\n\\tvar iconv = new Iconv(\'UTF-8\', \'ASCII//IGNORE\');\\n\\ticonv.convert(\'\xc3\xa7a va\'); // returns \\"a va\\"\\n\\n\\tvar iconv = new Iconv(\'UTF-8\', \'ASCII//TRANSLIT\');\\n\\ticonv.convert(\'\xc3\xa7a va\'); // \\"ca va\\"\\n\\n\\tvar iconv = new Iconv(\'UTF-8\', \'ASCII//TRANSLIT//IGNORE\');\\n\\ticonv.convert(\'\xc3\xa7a va \xe3\x81\x8c\'); // \\"ca va \\"\\n\\n### EINVAL\\n\\nEINVAL is raised when the input ends in a partial character sequence. This is a feature,\\nnot a bug.\\n"', 'npm_config_init_module': '/Users/shilpe/.npm-init.js', 'npm_config_version': '', 'npm_config_json': '', 'npm_config_searchsort': 'name', 'npm_package_author_email': 'info@bnoordhuis.nl', 'npm_lifecycle_script': 'node-waf configure', 'Apple_Ubiquity_Message': '/tmp/launch-Q3Paox/Apple_Ubiquity_Message', 'PWD': '/Users/shilpe/rinker_worspace/scraper/node_modules/iconv', 'TERM_SESSION_CLASS_ID': '3B3E66AC-455F-47DC-8B61-506E7F380FF8', 'npm_config_cache_min': '', 'npm_config_tag': 'latest', 'COMMAND_MODE': 'unix2003'}
files = []
hash = 0
options = {'compile_targets': None, 'force': False, 'verbose': 0, 'nocache': False, 'progress_bar': 0, 'destdir': '', 'keep': False, 'zones': '', 'blddir': '', 'prefix': '/usr/local/', 'jobs': 4, 'srcdir': ''}
srcdir = '/Users/shilpe/rinker_worspace/scraper/node_modules/iconv'
